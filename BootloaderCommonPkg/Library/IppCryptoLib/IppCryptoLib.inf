## @file
#
#  Copyright (c) 2017-2020, Intel Corporation. All rights reserved.<BR>
#
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
#


[Defines]
  INF_VERSION                    = 0x00010005
  BASE_NAME                      = IppCryptoLib
  FILE_GUID                      = EF5676C2-86C2-49ac-B517-7092CDDB5A93
  MODULE_TYPE                    = BASE
  VERSION_STRING                 = 1.0
  LIBRARY_CLASS                  = CryptoLib
  DEFINE IPP_PATH                = auth

#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64
#

[Sources]
  $(IPP_PATH)/gsmod_enginegetsize.c
  $(IPP_PATH)/gsmod_engineinit.c
  $(IPP_PATH)/gsmod_montfactor.c
  $(IPP_PATH)/gsmodmethod.h
  $(IPP_PATH)/gsmodmethod_rsa.c
  $(IPP_PATH)/gsmodmethodstuff.h
  $(IPP_PATH)/gsmodstuff.h
  $(IPP_PATH)/gsscramble.h
  $(IPP_PATH)/ippcp.h
  $(IPP_PATH)/ippcpdefs.h
  $(IPP_PATH)/owncp.h
  $(IPP_PATH)/owndefs.h
  $(IPP_PATH)/pcpbn.h
  $(IPP_PATH)/pcpbngetsize.c
  $(IPP_PATH)/pcpbninit.c
  $(IPP_PATH)/pcpbnsetca.c
  $(IPP_PATH)/pcpbnsetoctstr.c
  $(IPP_PATH)/pcpbnu_arith_add.c
  $(IPP_PATH)/pcpbnu_arith_addmuldigit.c
  $(IPP_PATH)/pcpbnu_arith_mul_adc.c
  $(IPP_PATH)/pcpbnu_arith_sqr_adc.c
  $(IPP_PATH)/pcpbnu_arith_sub.c
  $(IPP_PATH)/pcpbnu_getoctstr.c
  $(IPP_PATH)/pcpbnu_lsr.c
  $(IPP_PATH)/pcpbnu_nlz.c
  $(IPP_PATH)/pcpbnu_setoctstr.c
  $(IPP_PATH)/pcpbnu32_arith_add.c
  $(IPP_PATH)/pcpbnu32_arith_div.c
  $(IPP_PATH)/pcpbnu32_arith_submuldigit.c
  $(IPP_PATH)/pcpbnu32_nlz.c
  $(IPP_PATH)/pcpbnu32arith.h
  $(IPP_PATH)/pcpbnu32misc.h
  $(IPP_PATH)/pcpbnuarith.h
  $(IPP_PATH)/pcpbnuimpl.h
  $(IPP_PATH)/pcpbnumisc.h
  $(IPP_PATH)/pcphash.h
  $(IPP_PATH)/pcphash_rmf.h
  $(IPP_PATH)/pcphashca_rmf.c
  $(IPP_PATH)/pcphashcnt.c
  $(IPP_PATH)/pcphashfinal_rmf.c
  $(IPP_PATH)/pcphashinit_rmf.c
  $(IPP_PATH)/pcphashmessage_rmf.c
  $(IPP_PATH)/pcphashmethod_rmf.h
  $(IPP_PATH)/pcphashmethod_sha256.c
  $(IPP_PATH)/pcphashmethod_sha384.c
  $(IPP_PATH)/pcphashmethod_sm3.c
  $(IPP_PATH)/pcphashsha256px.c
  $(IPP_PATH)/pcphashsha512px.c
  $(IPP_PATH)/pcphashsm3px.c
  $(IPP_PATH)/pcphashupdate_rmf.c
  $(IPP_PATH)/pcphmac.h
  $(IPP_PATH)/pcphmac_rmf.h
  $(IPP_PATH)/pcphmacca_rmf.c
  $(IPP_PATH)/pcphmacfinal_rmf.c
  $(IPP_PATH)/pcphmacgetsize_rmf.c
  $(IPP_PATH)/pcphmacmessage_rmf.c
  $(IPP_PATH)/pcphmacupdate_rmf.c
  $(IPP_PATH)/pcpmask_ct.h
  $(IPP_PATH)/pcpmgf1ca_rmf.c
  $(IPP_PATH)/pcpmontgomery.h
  $(IPP_PATH)/pcpmontred.c
  $(IPP_PATH)/pcpmontred.h
  $(IPP_PATH)/pcpngmontexpstuff.h
  $(IPP_PATH)/pcpngmontexpstuff_bin.c
  $(IPP_PATH)/pcpngrsa.h
  $(IPP_PATH)/pcpngrsamethod.h
  $(IPP_PATH)/pcpngrsamontstuff.h
  $(IPP_PATH)/pcprsa_emsa_pkcs1v15.h
  $(IPP_PATH)/pcprsa_getbuffersizepublickey.c
  $(IPP_PATH)/pcprsa_getdefmeth_pub.h
  $(IPP_PATH)/pcprsa_getsizepublickey.c
  $(IPP_PATH)/pcprsa_gsmethod__gpr_public.c
  $(IPP_PATH)/pcprsa_gspub_cipher.c
  $(IPP_PATH)/pcprsa_initpublickey.c
  $(IPP_PATH)/pcprsa_montexpgetsize.c
  $(IPP_PATH)/pcprsa_pkcs1c15_data.h
  $(IPP_PATH)/pcprsa_pss_preproc.h
  $(IPP_PATH)/pcprsa_setpublickey.c
  $(IPP_PATH)/pcprsa_sizeof_pubkey.h
  $(IPP_PATH)/pcprsa_verifysign_pkcs1v15.h
  $(IPP_PATH)/pcprsaverify_pss_rmf.c
  $(IPP_PATH)/pcprsaverifyhash_pkcs1v15_rmf.c
  $(IPP_PATH)/pcpsha256ca.c
  $(IPP_PATH)/pcpsha256stuff.h
  $(IPP_PATH)/pcpsha512stuff.h
  $(IPP_PATH)/pcpsm3ca.c
  $(IPP_PATH)/pcpsm3stuff.h
  $(IPP_PATH)/pcptool.h
  $(IPP_PATH)/pcpvariant.h
  $(IPP_PATH)/pcpvariant_abl.h
  hmac.c
  rsa_verify.c
  sha256.c
  sha384.c
  sm3.c

[Sources.IA32]
  $(IPP_PATH)/Ia32/pcpsha256v8as.nasm
  $(IPP_PATH)/Ia32/pcpsha256nias.nasm
  $(IPP_PATH)/Ia32/pcpsha512w7as.nasm
  $(IPP_PATH)/Ia32/pcpsha512g9as.nasm

[Sources.X64]
  $(IPP_PATH)/X64/pcpsha256u8as.nasm
  $(IPP_PATH)/X64/pcpsha256nias.nasm
  $(IPP_PATH)/X64/pcpsha512m7as.nasm
  $(IPP_PATH)/X64/pcpsha512e9as.nasm

[Packages]
  MdePkg/MdePkg.dec
  BootloaderCommonPkg/BootloaderCommonPkg.dec

[LibraryClasses]
  BaseLib
  DebugLib
  MemoryAllocationLib

[FixedPcd]
  gPlatformCommonLibTokenSpaceGuid.PcdCryptoShaOptMask
  gPlatformCommonLibTokenSpaceGuid.PcdIppHashLibSupportedMask
  gPlatformCommonLibTokenSpaceGuid.PcdCompSignSchemeSupportedMask

[BuildOptions]
  MSFT:*_*_*_CC_FLAGS = -D_SLIMBOOT_OPT -D_ARCH_IA32 -D_IPP_LE
  GCC:*_*_*_CC_FLAGS  = -D_SLIMBOOT_OPT -D_ARCH_IA32 -D_IPP_LE -Wno-unused-but-set-variable
  XCODE:*_*_*_CC_FLAGS  = -D_SLIMBOOT_OPT -D_ARCH_IA32 -D_IPP_LE
